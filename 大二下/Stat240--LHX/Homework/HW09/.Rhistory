)
without_partner
gbinom(610,0.5,scale=TRUE) +
geom_vline(xintercept=358, color="red", linetype="dashed") +
geom_vline(xintercept=610*0.5-(358-610*0.5),color="red", linetype="dashed")
#n=610, p=0.5
pbinom(358, 610, 0.5, lower.tail = FALSE) * 2
without_partner <- chimpanzee %>%
filter(partner == "none") %>%
summarize(
prosocial = sum(prosocial),
selfish = sum(selfish),
total = prosocial + selfish,
p = prosocial / total
)
without_partner
gbinom(180, 0.5, scale = TRUE) +
geom_vline(xintercept = 82, color = "red", linetype = "dashed") +
geom_vline(xintercept = 180 * 0.5 - (82 - 180 * 0.5), color = "red", linetype = "dashed")
#n=610, p=0.5
pbinom(358, 610, 0.5, lower.tail = FALSE) * 2
without_partner <- chimpanzee %>%
filter(partner == "none") %>%
summarize(
prosocial = sum(prosocial),
selfish = sum(selfish),
total = prosocial + selfish,
p = prosocial / total
)
without_partner
gbinom(180, 0.5, scale = TRUE) +
geom_vline(xintercept = 82, color = "red", linetype = "dashed") +
geom_vline(xintercept = 180 * 0.5 + (180 * 0.5 - 82), color = "red", linetype = "dashed")
#n=610, p=0.5
pbinom(358, 610, 0.5, lower.tail = FALSE) * 2
chimpanzee <- read_csv("../../data/chimpanzee.csv")
with_partner <- chimpanzee %>%
filter(partner != "none") %>%
summarize(
prosocial = sum(prosocial),
selfish = sum(selfish),
total = prosocial + selfish,
p = prosocial / total
)
with_partner
gbinom(610, 0.5, scale = TRUE) +
geom_vline(xintercept = 358, color = "red", linetype = "dashed") +
geom_vline(xintercept = 610 * 0.5 + (610 * 0.5 - 358), color = "red", linetype = "dashed")
#n=610, p=0.5
pbinom(358, 610, 0.5, lower.tail = FALSE) * 2
without_partner <- chimpanzee %>%
filter(partner == "none") %>%
summarize(
prosocial = sum(prosocial),
selfish = sum(selfish),
total = prosocial + selfish,
p = prosocial / total
)
without_partner
gbinom(180, 0.5, scale = TRUE) +
geom_vline(xintercept = 82, color = "red", linetype = "dashed") +
geom_vline(xintercept = 180 * 0.5 + (180 * 0.5 - 82), color = "red", linetype = "dashed")
#n=180, p=0.5
pbinom(82, 180, 0.5, lower.tail = FALSE) * 2
without_partner <- chimpanzee %>%
filter(partner == "none") %>%
summarize(
prosocial = sum(prosocial),
selfish = sum(selfish),
total = prosocial + selfish,
p = prosocial / total
)
without_partner
gbinom(180, 0.5, scale = TRUE) +
geom_vline(xintercept = 82, color = "red", linetype = "dashed") +
geom_vline(xintercept = 180 * 0.5 + (180 * 0.5 - 82), color = "red", linetype = "dashed")
#n=180, p=0.5
pbinom(83, 180, 0.5, lower.tail = FALSE) * 2
without_partner <- chimpanzee %>%
filter(partner == "none") %>%
summarize(
prosocial = sum(prosocial),
selfish = sum(selfish),
total = prosocial + selfish,
p = prosocial / total
)
without_partner
gbinom(180, 0.5, scale = TRUE) +
geom_vline(xintercept = 82, color = "red", linetype = "dashed") +
geom_vline(xintercept = 180 * 0.5 + (180 * 0.5 - 82), color = "red", linetype = "dashed")
#n=180, p=0.5
pbinom(83, 180, 0.5, lower.tail = TRUE) * 2
chimpanzee %>%
summarize(
prosocial=sum(prosocial),
selfish=sum(selfish),
total=prosocial+selfish,
p=prosocial/total
)
install.packages("kableExtra")
chimps1 = chimps %>%
filter(with_partner == "partner") %>%
group_by(actor) %>%
summarize(prosocial = sum(prosocial),
selfish = sum(selfish),
n = prosocial + selfish,
phat = prosocial / n,
ptilde = (prosocial+2)/(n+4),
se = sqrt(ptilde*(1-ptilde)/(n+4)),
ci_a = ptilde - 1.96*se,
ci_b = ptilde + 1.96*se)
chimps2 = chimps1 %>%
summarize(prosocial = sum(prosocial),
selfish = sum(selfish),
n = prosocial + selfish,
phat = prosocial / n)
library(kableExtra)
chimps1 %>%
select(actor, n, prosocial, selfish, phat) %>%
mutate(phat = round(phat,3)) %>%
kable() %>%
kable_styling(position = "left", full_width = FALSE,
bootstrap_options = c("striped", "condensed"))
ggplot(chimps1) +
geom_pointrange(aes(x = actor, y = phat, ymin = ci_a, ymax = ci_b)) +
xlab("Chimpanzee Label") +
ylab("Prosocial Choice Probability") +
ggtitle("Prosocial Choice Experiment with Partners") +
theme_minimal()
dat = chimps1 %>%
mutate(p_0 = sum(prosocial)/sum(n)) %>%
mutate(log_L0 = dbinom(prosocial,n,p_0,log=TRUE),
log_L1 = dbinom(prosocial,n,phat,log=TRUE))
lrt = dat %>%
summarize(log_L0 = sum(log_L0),
log_L1 = sum(log_L1),
lrt = 2*(log_L1 - log_L0),
R = exp(log_L0-log_L1))
lrt
gchisq(6) +
geom_chisq_fill(df=6, a=lrt$lrt) +
xlab("") +
theme_bw()
## calculate the p-value
lrt = lrt %>%
mutate(p_value = 1 - pchisq(lrt,6))
lrt
## df should have columns
## - prosocial,
## - selfish, and
## - n
lrt_stat = function(df)
{
df = df %>%
mutate(p_0 = sum(prosocial)/sum(n),
p_hat = prosocial/n,
log_L0 = dbinom(prosocial,n,p_0,log=TRUE),
log_L1 = dbinom(prosocial,n,p_hat,log=TRUE)) %>%
summarize(lrt = 2*(sum(log_L1) - sum(log_L0)))
return( df$lrt )
}
## This function is much faster
lrt_stat_vector = function(df)
{
x = df$prosocial
n = df$n
p_0 = sum(x)/sum(n)
p_hat = x/n
log_L0 = sum(dbinom(x,n,p_0,log=TRUE))
log_L1 = sum(dbinom(x,n,p_hat,log=TRUE))
return( 2*(log_L1 - log_L0) )
}
## Test the time for the dplyr and vector versions of the
##   functions to calculate the test statistic
system.time( {for(i in 1:1000) lrt_stat(chimps1)} )
system.time( {for(i in 1:1000) lrt_stat_vector(chimps1)} )
lrt_randomization = function(df, N=10000)
{
m = nrow(df)
p_0 = df %>%
summarize(p_0 = sum(prosocial)/sum(n)) %>%
pull(p_0)
lrt = numeric(N)
for ( i in 1:N )
{
df_rand = df %>%
mutate(prosocial = rbinom(m,n,p_0))
lrt[i] = lrt_stat_vector(df_rand)
}
return( lrt )
}
lrt = chimps1 %>%
select(prosocial,n) %>%
lrt_randomization()
lrt_0 = lrt_stat(chimps1)
p_value = mean(lrt >= lrt_0)
signif(p_value,4)
## Compare
signif(1 - pchisq(lrt_0,6),4)
## Check plot
df_lrt = tibble(lrt)
ggplot(df_lrt, aes(x=lrt)) +
geom_density() +
geom_chisq_fill(df=6,a=lrt_0) +
geom_chisq_density(df=6) +
theme_bw()
B = 10,000
B = 10000
pnull_1=rbinom(B,wpartner$total,chimp_sum$p)/wpartner$total
total_chimpanzee <- chimpanzee %>%
summarize(
prosocial=sum(prosocial),
selfish=sum(selfish),
total=prosocial+selfish,
p=prosocial/total
)
total_chimpanzee
B = 10000
pnull_1 = rbinom(B,with_partner$total, total_chimpanzee$p) / with_partner$total
pnull_2 = rbinom(B,without_partner$total, total_chimpanzee$p) / without_partner$total
diff = pnull_1 - pnull_2
mean(diff)
sd(diff)
B = 10000
pnull_1 = rbinom(B,with_partner$total, total_chimpanzee$p) / with_partner$total
pnull_2 = rbinom(B,without_partner$total, total_chimpanzee$p) / without_partner$total
diff = pnull_1 - pnull_2
mean(diff)
sd(diff)
B = 10000
pnull_1 = rbinom(B,with_partner$total, total_chimpanzee$p) / with_partner$total
pnull_2 = rbinom(B,without_partner$total, total_chimpanzee$p) / without_partner$total
diff = pnull_1 - pnull_2
mean(diff)
sd(diff)
B = 10000
pnull_1 = rbinom(B,with_partner$total, total_chimpanzee$p) / with_partner$total
pnull_2 = rbinom(B,without_partner$total, total_chimpanzee$p) / without_partner$total
diff = pnull_1 - pnull_2
mean(diff)
sd(diff)
B = 10000
pnull_1 = rbinom(B,with_partner$total, total_chimpanzee$p) / with_partner$total
pnull_2 = rbinom(B,without_partner$total, total_chimpanzee$p) / without_partner$total
diff = pnull_1 - pnull_2
mean(diff)
sd(diff)
B = 10000
pnull_1 = rbinom(B,with_partner$total, total_chimpanzee$p) / with_partner$total
pnull_2 = rbinom(B,without_partner$total, total_chimpanzee$p) / without_partner$total
diff = pnull_1 - pnull_2
mean(diff)
sd(diff)
View(with_partner)
View(without_partner)
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p) / 610
X_2 = rbinom(B, 180, total_chimpanzee$p) / 180
diff = X_1 - X_2
mean(diff)
sd(diff)
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p) / 610
X_2 = rbinom(B, 180, total_chimpanzee$p) / 180
diff = X_1 - X_2
mean(diff)
sd(diff)
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p) / 610
X_2 = rbinom(B, 180, total_chimpanzee$p) / 180
diff = X_1 - X_2
mean(diff)
sd(diff)
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p) / 610
X_2 = rbinom(B, 180, total_chimpanzee$p) / 180
diff = X_1 - X_2
mean(diff)
sd(diff)
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p) / 610
X_2 = rbinom(B, 180, total_chimpanzee$p) / 180
diff = X_1 - X_2
mean(diff)
sd(diff)
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p) / 610
X_2 = rbinom(B, 180, total_chimpanzee$p) / 180
diff = X_1 - X_2
mean(diff)
sd(diff)
B = 100000000000000
X_1 = rbinom(B, 610, total_chimpanzee$p) / 610
B = 100000000
X_1 = rbinom(B, 610, total_chimpanzee$p) / 610
X_2 = rbinom(B, 180, total_chimpanzee$p) / 180
diff = X_1 - X_2
mean(diff)
sd(diff)
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p) / 610
X_2 = rbinom(B, 180, total_chimpanzee$p) / 180
diff = X_1 - X_2
mean(diff)
sd(diff)
pnorm(with_partner$p - without_partner$p, mean(diff), sd(diff), lower.tail=FALSE)*2
ggplot()+
geom_density(aes(diff))+
geom_norm_density(mean(diff),sd(diff),linetype="dashed")+
geom_vline(xintercept=wpartner$p-wopartner$p, color="red", linetype="dashed")
ggplot()+
geom_density(aes(diff))+
geom_norm_density(mean(diff),sd(diff),linetype="dashed")+
geom_vline(xintercept=with_partner$p - without_partner$p, color="red", linetype="dashed")
pnorm(with_partner$p - without_partner$p, mean(diff), sd(diff), lower.tail=FALSE)*2
mean(diff>with_partner$p - without_partner$p)
diff
ggplot()+
geom_density(mapping = aes(diff))+
geom_norm_density(mean(diff), sd(diff), linetype="dashed")+
geom_vline(xintercept=with_partner$p - without_partner$p)
ggplot()+
geom_density(mapping = aes(diff))+
geom_norm_density(mean(diff), sd(diff), linetype="dashed")+
geom_vline(xintercept=with_partner$p - without_partner$p, color="red", linetype="dashed")
ggplot()+
geom_density(mapping = aes(diff))+
geom_norm_density(mean(diff), sd(diff), linetype="dashed")+
geom_vline(xintercept = with_partner$p - without_partner$p)
ggplot()+
geom_density(mapping = aes(diff))+
geom_norm_density(mean(diff), sd(diff), linetype="dashed")+
geom_vline(xintercept = with_partner$p - without_partner$p, color = "red")
ggplot()+
geom_density(mapping = aes(diff))+
geom_vline(xintercept = with_partner$p - without_partner$p, color = "red")
pnorm(with_partner$p - without_partner$p, mean(diff), sd(diff), lower.tail=FALSE) * 2
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p)
X_2 = rbinom(B, 180, total_chimpanzee$p)
diff = X_1 / 610 - X_2 / 180
mean(diff)
sd(diff)
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p)
X_2 = rbinom(B, 180, total_chimpanzee$p)
diff = X_1 / 610 - X_2 / 180
diff
mean(diff)
sd(diff)
pnorm(with_partner$p - without_partner$p, mean(diff), sd(diff), lower.tail = FALSE) * 2
ggplot()+
geom_density(mapping = aes(diff))+
geom_vline(xintercept = with_partner$p - without_partner$p, color = "red")
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p)
X_2 = rbinom(B, 180, total_chimpanzee$p)
diff = X_1 / 610 - X_2 / 180
mean(diff)
sd(diff)
total_chimpanzee <- chimpanzee %>%
summarize(
prosocial=sum(prosocial),
selfish=sum(selfish),
total=prosocial+selfish,
p=prosocial/total
)
total_chimpanzee
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
chimpanzee <- read_csv("../../data/chimpanzee.csv")
with_partner <- chimpanzee %>%
filter(partner != "none") %>%
summarize(
prosocial = sum(prosocial),
selfish = sum(selfish),
total = prosocial + selfish,
p = prosocial / total
)
with_partner
gbinom(610, 0.5, scale = TRUE) +
geom_vline(xintercept = 358, color = "red", linetype = "dashed") +
geom_vline(xintercept = 610 * 0.5 + (610 * 0.5 - 358), color = "red", linetype = "dashed")
#n=610, p=0.5
pbinom(358, 610, 0.5, lower.tail = FALSE) * 2
without_partner <- chimpanzee %>%
filter(partner == "none") %>%
summarize(
prosocial = sum(prosocial),
selfish = sum(selfish),
total = prosocial + selfish,
p = prosocial / total
)
without_partner
gbinom(180, 0.5, scale = TRUE) +
geom_vline(xintercept = 82, color = "red", linetype = "dashed") +
geom_vline(xintercept = 180 * 0.5 + (180 * 0.5 - 82), color = "red", linetype = "dashed")
#n=180, p=0.5
pbinom(83, 180, 0.5, lower.tail = TRUE) * 2
total_chimpanzee <- chimpanzee %>%
summarize(
prosocial=sum(prosocial),
selfish=sum(selfish),
total=prosocial+selfish,
p=prosocial/total
)
total_chimpanzee
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p)
X_2 = rbinom(B, 180, total_chimpanzee$p)
diff = X_1 / 610 - X_2 / 180
mean(diff)
sd(diff)
ggplot()+
geom_density(mapping = aes(diff))+
geom_vline(xintercept = with_partner$p - without_partner$p, color = "red")
pnorm(with_partner$p - without_partner$p, mean(diff), sd(diff), lower.tail = FALSE) * 2
?pnorm
pnorm(with_partner$p - without_partner$p, mean(diff), sd(diff), lower.tail = FALSE) +
pnorm(without_partner$p - with_partner$p, mean(diff), sd(diff))
pnorm(with_partner$p - without_partner$p, mean(diff), sd(diff), lower.tail = FALSE) +
pnorm(without_partner$p - with_partner$p, mean(diff), sd(diff))
pnorm(with_partner$p - without_partner$p, mean(diff), sd(diff), lower.tail = FALSE)*2
without_partner <- chimpanzee %>%
filter(partner == "none") %>%
summarize(
prosocial = sum(prosocial),
selfish = sum(selfish),
total = prosocial + selfish,
p = prosocial / total
)
without_partner
#n=180, p=0.5
pbinom(83, 180, 0.5, lower.tail = TRUE) * 2
gbinom(180, 0.5, scale = TRUE) +
geom_vline(xintercept = 82, color = "red", linetype = "dashed") +
geom_vline(xintercept = 180 * 0.5 + (180 * 0.5 - 82), color = "red", linetype = "dashed")
chimpanzee <- read_csv("../../data/chimpanzee.csv")
with_partner <- chimpanzee %>%
filter(partner != "none") %>%
summarize(
prosocial = sum(prosocial),
selfish = sum(selfish),
total = prosocial + selfish,
p = prosocial / total
)
with_partner
#n=610, p=0.5
pbinom(358, 610, 0.5, lower.tail = FALSE) * 2
gbinom(610, 0.5, scale = TRUE) +
geom_vline(xintercept = 358, color = "red", linetype = "dashed") +
geom_vline(xintercept = 610 * 0.5 + (610 * 0.5 - 358), color = "red", linetype = "dashed")
without_partner <- chimpanzee %>%
filter(partner == "none") %>%
summarize(
prosocial = sum(prosocial),
selfish = sum(selfish),
total = prosocial + selfish,
p = prosocial / total
)
without_partner
#n=180, p=0.5
pbinom(83, 180, 0.5, lower.tail = TRUE) * 2
gbinom(180, 0.5, scale = TRUE) +
geom_vline(xintercept = 82, color = "red", linetype = "dashed") +
geom_vline(xintercept = 180 * 0.5 + (180 * 0.5 - 82), color = "red", linetype = "dashed")
without_partner <- chimpanzee %>%
filter(partner == "none") %>%
summarize(
prosocial = sum(prosocial),
selfish = sum(selfish),
total = prosocial + selfish,
p = prosocial / total
)
without_partner
#n=180, p=0.5
pbinom(83, 180, 0.5) * 2
gbinom(180, 0.5, scale = TRUE) +
geom_vline(xintercept = 82, color = "red", linetype = "dashed") +
geom_vline(xintercept = 180 * 0.5 + (180 * 0.5 - 82), color = "red", linetype = "dashed")
total_chimpanzee <- chimpanzee %>%
summarize(
prosocial=sum(prosocial),
selfish=sum(selfish),
total=prosocial+selfish,
p=prosocial/total
)
total_chimpanzee
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p)
X_2 = rbinom(B, 180, total_chimpanzee$p)
diff = X_1 / 610 - X_2 / 180
mean(diff)
sd(diff)
ggplot()+
geom_density(mapping = aes(diff))+
geom_vline(xintercept = with_partner$p - without_partner$p, color = "red")
pnorm(with_partner$p - without_partner$p, mean(diff), sd(diff), lower.tail = FALSE) +
pnorm(without_partner$p - with_partner$p, mean(diff), sd(diff))
View(chimpanzee)
x_1
B = 10000
X_1 = rbinom(B, 610, total_chimpanzee$p)
X_2 = rbinom(B, 180, total_chimpanzee$p)
diff = X_1 / 610 - X_2 / 180
mean(diff)
sd(diff)
x_1
X_1
