mutate(closed = case_when(
str_detect(closed,"Oct|Nov|Dec") ~ str_c(closed,' ',year1),
str_detect(closed,"Jan|Feb|Mar|Apr|May") ~ str_c(closed,' ',year2),
TRUE ~ NA_character_
))
view(read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na() %>%
## question (b) end
## question (c) begin
separate(winter,into = c("year1","year2"), remove = FALSE) %>%
mutate(year1 = as.numeric(year1)) %>%
mutate(year2 = year1+1) %>%
## question (c) end
mutate(closed = case_when(
str_detect(closed,"Oct|Nov|Dec") ~ str_c(closed,' ',year1),
str_detect(closed,"Jan|Feb|Mar|Apr|May") ~ str_c(closed,' ',year2),
TRUE ~ NA_character_
)))
view(read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na() %>%
## question (b) end
## question (c) begin
separate(winter,into = c("year1","year2"), remove = FALSE) %>%
mutate(year1 = as.numeric(year1)) %>%
mutate(year2 = year1+1) %>%
## question (c) end
mutate(closed = case_when(
str_detect(closed,"Oct|Nov|Dec") ~ str_c(closed,' ',year1),
str_detect(closed,"Jan|Feb|Mar|Apr|May") ~ str_c(closed,' ',year2),
TRUE ~ NA_character_
)))
read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na() %>%
## question (b) end
## question (c) begin
separate(winter,into = c("year1","year2"), remove = FALSE) %>%
mutate(year1 = as.numeric(year1)) %>%
mutate(year2 = year1+1) %>%
## question (c) end
mutate(closed = case_when(
str_detect(closed,"Oct|Nov|Dec") ~ str_c(closed,' ',year1),
str_detect(closed,"Jan|Feb|Mar|Apr|May") ~ str_c(closed,' ',year2),
TRUE ~ NA_character_
))
read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na() %>%
## question (b) end
## question (c) begin
separate(winter,into = c("year1","year2"), remove = FALSE) %>%
mutate(year1 = as.numeric(year1))
read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na() %>%
## question (b) end
## question (c) begin
separate(winter,into = c("year1","year2"), remove = FALSE)
read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na() %>%
## question (b) end
## question (c) begin
separate(winter,into = c("year1","year2"), remove = FALSE) %>%
mutate(year1 = as.numeric(year1))
read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na() %>%
## question (b) end
## question (c) begin
separate(winter,into = c("year1","year2"), remove = FALSE) %>%
mutate(year1 = as.numeric(year1)) %>%
mutate(year2 = year1+1)
mendota_interval = read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na() %>%
## question (b) end
## question (c) begin
separate(winter,into = c("year1","year2"), remove = FALSE) %>%
mutate(year1 = as.numeric(year1)) %>%
mutate(year2 = year1+1) %>%
## question (c) end
mutate(closed = case_when(
str_detect(closed,"Oct|Nov|Dec") ~ str_c(closed,' ',year1),
str_detect(closed,"Jan|Feb|Mar|Apr|May") ~ str_c(closed,' ',year2),
TRUE ~ NA_character_
)) %>%
mutate(closed = dmy(closed)) %>%
mutate(open = case_when(
str_detect(open,"Oct|Nov|Dec") ~ str_c(open,' ',year1),
str_detect(open,"Jan|Feb|Mar|Apr|May") ~ str_c(open,' ',year2),
TRUE ~ NA_character_
)) %>%
mutate(open = dmy(open)) %>%
mutate(days = open - closed)
mendota = mendota_interval
read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na() %>%
## question (b) end
## question (c) begin
separate(winter,into = c("year1","year2"), remove = FALSE) %>%
mutate(year1 = as.numeric(year1)) %>%
mutate(year2 = year1+1) %>%
## question (c) end
mutate(closed = case_when(
str_detect(closed,"Oct|Nov|Dec") ~ str_c(closed,' ',year1),
str_detect(closed,"Jan|Feb|Mar|Apr|May") ~ str_c(closed,' ',year2),
TRUE ~ NA_character_
)) %>%
mutate(closed = dmy(closed)) %>%
mutate(open = case_when(
str_detect(open,"Oct|Nov|Dec") ~ str_c(open,' ',year1),
str_detect(open,"Jan|Feb|Mar|Apr|May") ~ str_c(open,' ',year2),
TRUE ~ NA_character_
)) %>%
mutate(open = dmy(open)) %>%
mutate(days = open - closed)
mendota = mendota_interval
mendota
mendota_interval %>%
## question (d)
group_by(winter)
mendota_interval
read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na() %>%
## question (b) end
## question (c) begin
separate(winter,into = c("year1","year2"), remove = FALSE)
mendota_interval
mendota_interval %>%
## question (d) begin
group_by(winter) %>%
summarize(intervals = n(),
days = sum(days),
first_freeze = min(closed),
last_thaw = max(open))
view(mendota_interval %>%
## question (d) begin
group_by(winter) %>%
summarize(intervals = n(),
days = sum(days),
first_freeze = min(closed),
last_thaw = max(open)) )
mendota_interval
mendota_interval %>%
## question (d) begin
group_by(winter)
view(mendota_interval %>%
## question (d) begin
group_by(winter) %>%
summarize(intervals = n(),
days = sum(days),
first_freeze = min(closed),
last_thaw = max(open)) )
mendota_interval %>%
## question (d) begin
group_by(winter) %>%
summarize(intervals = n(),
days = sum(days),
first_freeze = min(closed),
last_thaw = max(open))
knitr::opts_chunk$set(echo = FALSE, message=FALSE, fig.height = 3)
library(tidyverse)
library(lubridate)
## Note: this code assumes viridis.R is two steps up the file directory tree
## Comment it out and use the line below if the file is in the same directory
## Or comment out both lines if you do not have the file
source("../../scripts/viridis.R")
knitr::opts_chunk$set(echo = FALSE, message=FALSE, fig.height = 3)
library(tidyverse)
library(lubridate)
## Note: this code assumes viridis.R is two steps up the file directory tree
## Comment it out and use the line below if the file is in the same directory
## Or comment out both lines if you do not have the file
source("../../scripts/viridis.R")
## Read the US deaths data
## Read the US deaths data
us_deaths = read_csv("../../data/us-deaths.csv") %>%
select(-baseline) %>%
mutate(week_end_date = mdy(week_end_date))
## Read the S&P 500 data
sp500 = read_csv("../../data/sp500.csv") %>%
select(-`Adj Close`,-Volume)
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = actual_deaths), color = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y")
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = actual_deaths), color = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y")
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = actual_deaths), color = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y") +
scale_y_continuous(limits = c(0, 80000), breaks = seq(0, 80000, 10000)) +
ggtitle("The Predicted and Actual Deaths in the US from 2017 to 2020") +
theme(plot.title = element_text(size = 10.5))
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = actual_deaths / 10000), color = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths /10000), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y") +
scale_y_continuous(limits = c(0, 80000), breaks = seq(0, 80000, 10000)) +
ggtitle("The Predicted and Actual Deaths in the US from 2017 to 2020") +
theme(plot.title = element_text(size = 10.5))
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = actual_deaths / 10000), color = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths /10000), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y") +
ggtitle("The Predicted and Actual Deaths in the US from 2017 to 2020") +
theme(plot.title = element_text(size = 10.5))
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = actual_deaths / 10000), color = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths /10000), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y") +
scale_y_continuous(limits = c(0, 8)) +
ggtitle("The Predicted and Actual Deaths in the US from 2017 to 2020") +
theme(plot.title = element_text(size = 10.5))
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = actual_deaths / 10000), color = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths /10000), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y") +
scale_y_continuous(limits = c(0, 8)) +
ggtitle("The Predicted and Actual Deaths in the US from 2017 to 2020")
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = actual_deaths / 10000), color = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths /10000), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y") +
scale_y_continuous(limits = c(0, 8)) +
ggtitle("The Predicted and Actual Deaths in the US from 2017 to 2020") +
lab(x = "Time Period (by week)", y = "Weekly Death (10000 of people)")
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = actual_deaths / 10000), color = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths /10000), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y") +
scale_y_continuous(limits = c(0, 8)) +
ggtitle("The Predicted and Actual Deaths in the US from 2017 to 2020") +
labs(x = "Time Period (by week)", y = "Weekly Death (10000 of people)")
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = actual_deaths / 10000), color = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths / 10000), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y") +
scale_y_continuous(limits = c(0, 8)) +
ggtitle("The Predicted and Actual Deaths in the US from 2017 to 2020") +
labs(x = "Time Period (by week)", y = "Weekly Death (10000 of people)")
## Read in the csv file
## There is one row per exoplanet after applying `filter(default_flag != 0)`
## Select some variables that we will work with and rename them
## Remove very massive planet (only to improve plot visuals)
## Drop missing values; the remaining exoplanets will have estimates of both mass and radius
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag != 0) %>%
select(pl_name, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(name=pl_name, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(mass <10000) %>%
drop_na()
knitr::opts_chunk$set(echo = FALSE, message=FALSE, fig.height = 3)
library(tidyverse)
library(lubridate)
## Note: this code assumes viridis.R is two steps up the file directory tree
## Comment it out and use the line below if the file is in the same directory
## Or comment out both lines if you do not have the file
source("../../scripts/viridis.R")
## Read the US deaths data
## Read the US deaths data
us_deaths = read_csv("../../data/us-deaths.csv") %>%
select(-baseline) %>%
mutate(week_end_date = mdy(week_end_date))
## Read the S&P 500 data
sp500 = read_csv("../../data/sp500.csv") %>%
select(-`Adj Close`,-Volume)
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = actual_deaths), color = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y")
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = actual_deaths / 10000), color = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths / 10000), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y") +
scale_y_continuous(limits = c(0, 8)) +
ggtitle("The Predicted and Actual Deaths in the US from 2017 to 2020") +
labs(x = "Time Period (by week)", y = "Weekly Death (10000 of people)")
us_deaths %>%
filter(week_end_date > ymd("2020-01-01") & week_end_date < ymd("2020-08-01")) %>%
ggplot(aes(x = week_end_date)) +
geom_col(aes(y = actual_deaths), color = viridis3[1], fill = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y", date_break = "1 month") +
xlab("") +
ylab("Actual Deaths") +
ggtitle("US Deaths in 2020 by Week") +
theme_bw() +
theme(axis.text.x = element_text(angle=60, hjust=1))
ggplot(sp500, aes(x = Date)) +
geom_line(aes(y = Close), color = viridis3[1]) +
geom_line(aes(y = High), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y")
ggplot(sp500, aes(x = Date)) +
geom_line(aes(y = Close), color = viridis3[1]) +
geom_line(aes(y = High), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y")
ggplot(sp500, aes(x = Date)) +
geom_col(aes(y = Close), color = viridis3[1]) +
geom_line(aes(y = High), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y", date_break = "1 month") +
xlab("") +
ylab("S&P 500 Index") +
ggtitle("2020 S&P Index") +
theme_bw() +
theme(axis.text.x = element_text(angle=60, hjust=1))
## Read in the csv file
## There is one row per exoplanet after applying `filter(default_flag != 0)`
## Select some variables that we will work with and rename them
## Remove very massive planet (only to improve plot visuals)
## Drop missing values; the remaining exoplanets will have estimates of both mass and radius
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag != 0) %>%
select(pl_name, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(name=pl_name, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(mass <10000) %>%
drop_na()
ggplot(planets, aes(x = year, y = mass, color = method)) +
geom_point() +
scale_y_log10() +
xlab("Discovery Year") +
ylab("Mass (Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="Using scale_y_log10()")
ggplot(planets, aes(x = year, y = log10(mass), color = method)) +
geom_point() +
xlab("Discovery Year") +
ylab("log10(Mass/Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="using y = log10(mass)")
ggplot(planets, aes(x = year, y = log10(mass), color = method)) +
geom_point(position = position_jitter(width = 0.05, height = 0)) +
xlab("Discovery Year") +
ylab("log10(Mass/Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="using y = log10(mass)")
ggplot(data = planets) +
geom_bar(mapping = aes(x = method)) +
xlab("Method") +
ylab("The count of observations") +
ggtitle("The Count of the Number of Exoplanets Observations for each Method") +
theme(plot.title = element_text(size = 10), axis.text = element_text(size = 6))
ggplot(data = planets) +
geom_bar(mapping = aes(x = method, y = stat(prop), group = 1)) +
xlab("Method") +
ylab("The proportion of observations") +
ggtitle("The Proportion of Different Exoplanets Observations Method") +
theme(plot.title = element_text(size = 11.5), axis.text.x = element_text(size = 6))
mendota_interval = read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na() %>%
## question (b) end
## question (c) begin
separate(winter,into = c("year1","year2"), remove = FALSE) %>%
mutate(year1 = as.numeric(year1)) %>%
mutate(year2 = year1+1) %>%
## question (c) end
mutate(closed = case_when(
str_detect(closed,"Oct|Nov|Dec") ~ str_c(closed,' ',year1),
str_detect(closed,"Jan|Feb|Mar|Apr|May") ~ str_c(closed,' ',year2),
TRUE ~ NA_character_
)) %>%
mutate(closed = dmy(closed)) %>%
mutate(open = case_when(
str_detect(open,"Oct|Nov|Dec") ~ str_c(open,' ',year1),
str_detect(open,"Jan|Feb|Mar|Apr|May") ~ str_c(open,' ',year2),
TRUE ~ NA_character_
)) %>%
mutate(open = dmy(open)) %>%
mutate(days = open - closed)
mendota = mendota_interval %>%
## question (d) begin
group_by(winter) %>%
summarize(intervals = n(),
days = sum(days),
first_freeze = min(closed),
last_thaw = max(open)) %>%
## questions (d) end
mutate(year1 = as.numeric(str_sub(winter,1,4))) %>%
mutate(decade = floor(year1 / 10) * 10) %>%
select(winter,year1,everything())
## Read in the csv file
## There is one row per exoplanet after applying `filter(default_flag != 0)`
## Select some variables that we will work with and rename them
## Remove very massive planet (only to improve plot visuals)
## Drop missing values; the remaining exoplanets will have estimates of both mass and radius
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag != 0) %>%
select(pl_name, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(name=pl_name, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(mass <10000) %>%
drop_na()
ggplot(planets, aes(x = year, y = mass, color = method)) +
geom_point() +
scale_y_log10() +
xlab("Discovery Year") +
ylab("Mass (Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="Using scale_y_log10()")
ggplot(planets, aes(x = year, y = log10(mass), color = method)) +
geom_point() +
xlab("Discovery Year") +
ylab("log10(Mass/Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="using y = log10(mass)")
ggplot(planets, aes(x = year, y = log10(mass), color = method)) +
geom_point(position = position_jitter(width = 0.05, height = 0)) +
facet_wrap(~position) +
xlab("Discovery Year") +
ylab("log10(Mass/Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="using y = log10(mass)")
ggplot(planets, aes(x = year, y = log10(mass), color = method)) +
geom_point(position = position_jitter(width = 0.05, height = 0)) +
facet_wrap(~method) +
xlab("Discovery Year") +
ylab("log10(Mass/Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="using y = log10(mass)")
ggplot(planets, aes(x = year, y = log10(mass), color = method)) +
geom_point(position = position_jitter(width = 0.05, height = 0, size = 0.3)) +
facet_wrap(~method) +
xlab("Discovery Year") +
ylab("log10(Mass/Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="using y = log10(mass)")
?position_jitter
ggplot(planets, aes(x = year, y = log10(mass), color = method)) +
geom_point(position = position_jitter(width = 0.05, height = 0), size = 0.3) +
facet_wrap(~method) +
xlab("Discovery Year") +
ylab("log10(Mass/Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="using y = log10(mass)")
knitr::opts_chunk$set(echo = FALSE, message=FALSE, fig.height = 3)
library(tidyverse)
library(lubridate)
## Note: this code assumes viridis.R is two steps up the file directory tree
## Comment it out and use the line below if the file is in the same directory
## Or comment out both lines if you do not have the file
source("../../scripts/viridis.R")
ggplot(planets, aes(x = year, y = mass, color = method)) +
geom_point() +
scale_y_log10() +
xlab("Discovery Year") +
ylab("Mass (Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="Using scale_y_log10()")
## Read in the csv file
## There is one row per exoplanet after applying `filter(default_flag != 0)`
## Select some variables that we will work with and rename them
## Remove very massive planet (only to improve plot visuals)
## Drop missing values; the remaining exoplanets will have estimates of both mass and radius
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag != 0) %>%
select(pl_name, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(name=pl_name, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(mass <10000) %>%
drop_na()
knitr::opts_chunk$set(echo = FALSE, message=FALSE, fig.height = 3)
library(tidyverse)
library(lubridate)
## Note: this code assumes viridis.R is two steps up the file directory tree
## Comment it out and use the line below if the file is in the same directory
## Or comment out both lines if you do not have the file
source("../../scripts/viridis.R")
## Read the US deaths data
## Read the US deaths data
us_deaths = read_csv("../../data/us-deaths.csv") %>%
select(-baseline) %>%
mutate(week_end_date = mdy(week_end_date))
