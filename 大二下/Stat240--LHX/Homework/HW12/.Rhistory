Tranquilizer = sum(tranquilizer_use*pop) / total,
Stimulant = sum(stimulant_use*pop) / total,
Meth = sum(meth_use*pop) / total,
Sedative = sum(sedative_use*pop) / total)
pie_drugs
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warnings=FALSE)
library(tidyverse)
library(lubridate)
library(dplyr)
drugs2 <- read_csv("https://github.com/fivethirtyeight/data/raw/master/drug-use-by-age/drug-use-by-age.csv")
drugs_generation <- drugs2 %>%
mutate(generation = case_when(age == "12" ~ "younger",
age == "13" ~ "younger",
age == "14" ~ "younger",
age == "15" ~ "younger",
age == "16" ~ "younger",
age == "17" ~ "younger",
age == "18" ~ "younger",
age == "19" ~ "younger",
age == "20" ~ "younger",
age == "21" ~ "younger",
age == "22-23" ~ "younger",
age == "24-25" ~ "younger",
age == "26-29" ~ "younger",
age == "30-34" ~ "older",
age == "35-49" ~ "older",
age == "50-64" ~ "older",
age == "65+" ~ "older", )) %>%
group_by(generation) %>%
summarise(pop = sum(n),
`Alcohol Use` = sum(`alcohol-use` * n, na.rm = TRUE) / pop,
`Marijuana Use` = sum(`marijuana-use` * n, na.rm = TRUE) / pop,
`Cocaine Use` = sum(`cocaine-use` * n, na.rm = TRUE) / pop,
`Crack Use` = sum(`crack-use` * n, na.rm = TRUE) / pop,
`Heroin Use` = sum(`heroin-use` * n, na.rm = TRUE) / pop,
`Hallucinogen Use` = sum(`hallucinogen-use` * n, na.rm = TRUE) / pop,
`Inhalant Use` = sum(`inhalant-use` * n, na.rm = TRUE) / pop,
`Pain Releiver Use` = sum(`pain-releiver-use` * n, na.rm = TRUE) / pop,
`Oxycontin Use` = sum(`oxycontin-use` * n, na.rm = TRUE) / pop,
`Tranquilizer Use` = sum(`tranquilizer-use` * n, na.rm = TRUE) / pop,
`Stimulant Use` = sum(`stimulant-use` * n, na.rm = TRUE) / pop,
`Meth Use` = sum(`meth-use`* n, na.rm = TRUE) / pop,
`Sedative Use` = sum(`sedative-use` * n, na.rm = TRUE) /pop
)
generations <- drugs_generation %>%
pivot_longer(cols = ends_with("Use"), names_to="drug", values_to="percentage") %>%
mutate(percentage = round(percentage, digits=2))
order <- generations %>%
filter(generation == "younger") %>%
arrange(desc(percentage))
generations$drug <- factor(generations$drug, levels = order$drug)
###QUESTION ONE CODE
d <-  read_csv("https://github.com/fivethirtyeight/data/raw/master/drug-use-by-age/drug-use-by-age.csv")
d<-mutate(d, generation=case_when(age=="12"~"Gen Z",
age=="13"~"Gen Z",
age=="14"~"Gen Z",
age=="15"~"Gen Z",
age=="16"~"Millenial",
age=="17"~"Millenial",
age=="18"~"Millenial",
age=="19"~"Millenial",
age=="20"~"Millenial",
age=="21"~"Millenial",
age=="22-23"~"Millenial",
age=="24-25"~"Millenial",
age=="26-29"~"Millenial",
age=="30-34"~"Gen X",
age=="35-49"~"Gen X",
age=="50-64"~"Boomer",
age=="65+"~"Boomer",
))%>%
rename(alcohol_use="alcohol-use", marijuana_use="marijuana-use", cocaine_use="cocaine-use", crack_use="crack-use", heroin_use="heroin-use", hallucinogen_use="hallucinogen-use", inhalant_use="inhalant-use", pain_releiver_use="pain-releiver-use", oxycontin_use="oxycontin-use", tranquilizer_use="tranquilizer-use", stimulant_use="stimulant-use", meth_use="meth-use", sedative_use="sedative-use", alcohol_frequency="alcohol-frequency", marijuana_frequency="marijuana-frequency", cocaine_frequency="cocaine-frequency", crack_frequency="crack-frequency", heroin_frequency="heroin-frequency", hallucinogen_frequency="hallucinogen-frequency", inhalant_frequency="inhalant-frequency", pain_releiver_frequency="pain-releiver-frequency", oxycontin_frequency="oxycontin-frequency", tranquilizer_frequency="tranquilizer-frequency", stimulant_frequency="stimulant-frequency", meth_frequency="meth-frequency", sedative_frequency="sedative-frequency")
d_use<-select(d, "age", "n", "generation" ,"alcohol_use", "marijuana_use", "cocaine_use", "crack_use", "heroin_use", "hallucinogen_use", "inhalant_use", "pain_releiver_use", "oxycontin_use", "tranquilizer_use", "stimulant_use", "meth_use", "sedative_use")
d_frequency<-select(d, "age", "n", "generation" ,"alcohol_frequency", "marijuana_frequency", "cocaine_frequency", "crack_frequency", "heroin_frequency", "hallucinogen_frequency", "inhalant_frequency", "pain_releiver_frequency", "oxycontin_frequency", "tranquilizer_frequency", "stimulant_frequency", "meth_frequency", "sedative_frequency")
users<-d_use%>%
mutate(alcohol_users=n*(alcohol_use/100),
marijuana_users=n*(marijuana_use/100),
cocaine_users=n*(cocaine_use/100),
crack_users=n*(crack_use/100),
heroin_users=n*(heroin_use/100),
hallucinogen_users=n*(hallucinogen_use/100),
inhalant_users=n*(inhalant_use/100),
pain_releiver_users=n*(pain_releiver_use/100),
oxycontin_users=n*(oxycontin_use/100),
tranquilizer_users=n*(tranquilizer_use/100),
stimulant_users=n*(stimulant_use/100),
meth_users=n*(meth_use/100),
sedative_users=n*(sedative_use/100))%>%
group_by(generation)%>%
summarize(people = sum(n),
alcohol_users=sum(alcohol_users),
marijuana_users=sum(marijuana_users),
cocaine_users=sum(cocaine_users),
crack_users=sum(crack_users),
heroin_users=sum(heroin_users),
hallucinogen_users=sum(hallucinogen_users),
inhalant_users=sum(inhalant_users),
pain_releiver_users=sum(pain_releiver_users),
oxycontin_users=sum(oxycontin_users),
tranquilizer_users=sum(tranquilizer_users),
stimulant_users=sum(stimulant_users),
meth_users=sum(meth_users),
sedative_users=sum(sedative_users))
use_percentage<-users%>%
group_by(generation)%>%
summarize(people = people,
"Alcohol Use"=alcohol_users/people,
"Marijuana Use"=marijuana_users/people,
"Cocaine Use"=cocaine_users/people,
"Crack Use"=crack_users/people,
"Heroin Use"=heroin_users/people,
"Hallucinogen Use"=hallucinogen_users/people,
"Inhalant Use"=inhalant_users/people,
"Pain Releiver Use"=pain_releiver_users/people,
"Oxycontin Use"=oxycontin_users/people,
"Tranquilizer Use"=tranquilizer_users/people,
"Stimulant Use"=stimulant_users/people,
"Meth Use"=meth_users/people,
"Sedative Use"=sedative_users/people)
drugs <- read_csv("https://github.com/fivethirtyeight/data/raw/master/drug-use-by-age/drug-use-by-age.csv") %>%
#transform(age = as.numeric(age)) %>%
mutate(generation = case_when(age == "12" ~ "Gen Z", age == "13" ~ "Gen Z", age == "14" ~ "Gen Z", age == "15" ~ "Gen Z",
age == "16" ~ "Millenial", age == "17" ~ "Millenial", age == "18" ~ "Millenial", age == "19" ~ "Millenial",
age == "20" ~ "Millenial", age == "21" ~ "Millenial", age == "22-23" ~ "Millenial",
age == "24-25" ~ "Millenial", age == "26-29" ~ "Millenial", age == "16" ~ "Millenial",
age == "30-34" ~ "Gen X", age == "35-49" ~ "Gen X",
age == "50-64" ~ "Boomer", age == "65+" ~ "Boomer")) %>%
rename(alcohol_use = "alcohol-use", alcohol_frequency = "alcohol-frequency",
marijuana_use = "marijuana-use", marijuana_frequency = "marijuana-frequency",
cocaine_use = "cocaine-use", cocaine_frequency = "cocaine-frequency",
crack_use = "crack-use", crack_frequency = "crack-frequency",
heroin_use = "heroin-use", heroin_frequency = "heroin-frequency",
hallucinogen_use = "hallucinogen-use", hallucinogen_frequency = "hallucinogen-frequency",
inhalant_use = "inhalant-use", inhalant_frequency = "inhalant-frequency",
pain_releiver_use = "pain-releiver-use",
pain_releiver_frequency = "pain-releiver-frequency",
oxycontin_use = "oxycontin-use", oxycontin_frequency = "oxycontin-frequency",tranquilizer_use = "tranquilizer-use",
tranquilizer_frequency = "tranquilizer-frequency",
stimulant_use = "stimulant-use", stimulant_frequency = "stimulant-frequency",
meth_use = "meth-use", meth_frequency = "meth-frequency",
sedative_use = "sedative-use", sedative_frequency = "sedative-frequency")
drugs$cocaine_frequency <- as.double(drugs$cocaine_frequency)
drugs$crack_frequency <- as.double(drugs$crack_frequency)
drugs$inhalant_frequency <- as.double(drugs$inhalant_frequency)
drugs$oxycontin_frequency <- as.double(drugs$oxycontin_frequency)
drugs$meth_frequency <- as.double(drugs$meth_frequency)
drugs$heroin_frequency <- as.double(drugs$heroin_frequency)
drugs[is.na(drugs)] = 0
drugss = drugs %>%
group_by(generation) %>%
summarise(pop = sum(n), alc_use = sum(alcohol_use * n, na.rm = TRUE) / pop,
#alc_freq = sum(alcohol_frequency),
marijuana_use = sum(marijuana_use * n, na.rm = TRUE) / pop,
#marijuana_freq = sum(marijuana_frequency),
cocaine_use = sum(cocaine_use * n, na.rm = TRUE) / pop,
#cocaine_freq = sum(cocaine_frequency),
crack_use = sum(crack_use * n, na.rm = TRUE) / pop,
#crack_freq = sum(crack_frequency),
heroin_use = sum(heroin_use * n, na.rm = TRUE) / pop,
#heroin_freq = sum(heroin_frequency),
hallucinogen_use = sum(hallucinogen_use * n, na.rm = TRUE) / pop,
#hallucinogen_freq = sum(hallucinogen_frequency),
inhalant_use = sum(inhalant_use * n, na.rm = TRUE) / pop,
#inhalant_freq = sum(inhalant_frequency),
pain_releiver_use = sum(pain_releiver_use * n, na.rm = TRUE) / pop,
#pain_releiver_freq = sum(pain_releiver_frequency),
oxycontin_use = sum(oxycontin_use * n, na.rm = TRUE) / pop,
#oxycontin_freq = sum(oxycontin_frequency),
tranquilizer_use = sum(tranquilizer_use * n, na.rm = TRUE) / pop,
#tranquilizer_freq = sum(tranquilizer_frequency),
stimulant_use = sum(stimulant_use * n, na.rm = TRUE) / pop,
#stimulant_freq = sum(stimulant_frequency),
meth_use = sum(meth_use * n, na.rm = TRUE) / pop,
#meth_freq = sum(meth_frequency),
sedative_use = sum(sedative_use * n, na.rm = TRUE) / pop)
#sedative_freq = sum(sedative_frequency))
head(drugss)
pie_drugs <- drugss %>%
select(!generation) %>%
select(!pop) %>%
summarize(Alcohol = sum(alc_use),
Marijuana = sum(marijuana_use),
Cocaine = sum(cocaine_use),
Crack = sum(crack_use),
Heroin = sum(heroin_use),
Hallucinogen = sum(hallucinogen_use),
Inhalant = sum(inhalant_use),
Pain_Reliever = sum(pain_releiver_use),
Oxycontin = sum(oxycontin_use),
Tranquilizer = sum(tranquilizer_use),
Stimulant = sum(stimulant_use),
Meth = sum(meth_use),
Sedative = sum(sedative_use))
pie_drugs = pie_drugs[, order(colSums(-pie_drugs))]
pie_char_data = tibble(Drug = c("Alcohol", "Marijuana", "Pain Reliever", "Tranquilizer", "Hallucinogen", "Cocaine", "Stimulant", "Inhalant", "Oxycontin", "Crack", "Meth", "Sedative", "Heroin"),                      Cumulative_Generation_Percentage = c(pie_drugs$Alcohol, pie_drugs$Marijuana, pie_drugs$Pain_Reliever, pie_drugs$Tranquilizer, pie_drugs$Hallucinogen, pie_drugs$Cocaine, pie_drugs$Stimulant, pie_drugs$Inhalant, pie_drugs$Oxycontin, pie_drugs$Crack, pie_drugs$Meth, pie_drugs$Sedative, pie_drugs$Heroin))
###SUMMING THE DATA TO FIND MOST POPULAR DRUGS
popular_drugs <- drugss %>%
select(!generation) %>%
select(!pop)
popular_drugs <- popular_drugs[, order(colSums(-popular_drugs))]
popular_drugs <- popular_drugs[,1:4]
head(popular_drugs)
###TAKING DRUGS AND TURNING IT INTO MOST POP DRUG FREQUENCIES
pop_drug_freq <- drugss %>%
group_by(generation) %>%
select(alc_use, marijuana_use, pain_releiver_use, tranquilizer_use)
pop_drug_use_2 <- drugss %>%
group_by(generation) %>%
select(alc_use, marijuana_use, pain_releiver_use, tranquilizer_use) %>%
rename(Alcohol = "alc_use", Marijuana = "marijuana_use", "Pain Reliever" = "pain_releiver_use",
Tranquilizer = "tranquilizer_use") %>%
pivot_longer(!generation, names_to = "drug", values_to = "use")
pivot<- use_percentage%>%
pivot_longer(cols = ends_with("Use"), names_to="drug", values_to="percentage")%>%
mutate(percentage = round(100*percentage, digits=2))
legend_ord <- levels(with(pie_char_data, reorder(Drug, -Cumulative_Generation_Percentage)))
ggplot(pie_char_data, aes(x = Drug, y = Cumulative_Generation_Percentage, fill = Drug)) +
geom_col() +
theme_classic() +
scale_x_discrete(limits = c("Alcohol", "Marijuana", "Pain Reliever", "Tranquilizer", "Hallucinogen", "Cocaine", "Stimulant", "Inhalant", "Oxycontin", "Crack", "Meth", "Sedative", "Heroin")) +
theme(axis.text=element_blank(),
axis.ticks = element_blank())+
labs(title="Drug Prominence", subtitle = "Across All Generations", x="Drug", y="Cumulative Drug User Percentage")+
geom_text(aes(label=round(Cumulative_Generation_Percentage, 2)), size=2.5, nudge_y = 5, color = "black") +
scale_fill_discrete(breaks=legend_ord)
generations %>%
ggplot(aes(x=generation, y=percentage, fill=generation, label=percentage))+
geom_col(position="dodge")+
coord_flip()+
scale_x_discrete(limits = c("younger", "older"))+
facet_wrap(~drug, nrow=3)+
labs(title="Percentage of Substance Users per Generation",
x="Generation",
y="Percent of Population that Uses",
subtitle = "Younger: Gen Z, Millenials | Older: Gen X, Baby Boomers",
aes(size=100))+
geom_text(aes(label=round(percentage, 1)), size=2.5, nudge_y = 4, color = "black", hjust=0.5)+
theme_bw()+
theme(axis.text.x=element_blank(),
axis.ticks = element_blank())
var_order <- pivot %>%
group_by(drug) %>%
summarize(m=mean(percentage)) %>%
arrange(desc(m)) %>%
pull(drug) %>%
unique()
pivot <- pivot %>%
mutate(drug = fct_relevel(drug, as.character(var_order)))
ggplot(pivot, aes(x=generation, y=percentage, fill=generation, label=percentage))+
geom_col(position="dodge")+
scale_x_discrete(limits = c("Gen X", "Millenial", "Boomer", "Gen Z"))+
facet_wrap(~drug, nrow=3)+
coord_flip()+
scale_fill_discrete(name = "Generation")+
theme_bw()+
theme(axis.text.x=element_blank(),
axis.ticks = element_blank())+
labs(title="Percentage of Substance Users per Generation", x="Generation", y="Percent of Population that Uses")+
geom_text(aes(label=round(percentage, 1)), size=2.5, nudge_y = 5, color = "black")
ggplot(pop_drug_use_2, mapping = aes(x = drug, y = use, fill = generation)) +
geom_col(position = "dodge2") +
ylab("Use Percentage") +
xlab("Drug") +
ggtitle("Drugs vs. Use Percentage", subtitle = "Per Generation") +
theme(axis.text.x = element_text(color = "black", angle = 0)) +
scale_fill_discrete(name = "Generation")+
theme_bw()+
theme(axis.ticks = element_blank())+
geom_text(aes(label=round(use, 2)), position=position_dodge(width=0.9),
vjust=-0.25, size = 2.5, color = "black")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(lubridate)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
## Read and format the data
chicago <- read_csv2("../../data/chicago-2018.csv") %>%
filter(hour >= "0800 - 0900" & hour <= "1900 - 2000") %>%
select(us_max_wait) %>%
rename(wait = us_max_wait)
## Make a vector with the data we from which we want to sample
chi_wait = chicago %>%
pull(wait)
## Read and format the data
chicago = read_csv2("../../data/chicago-2018.csv") %>%
filter(hour >= "0800 - 0900" & hour <= "1900 - 2000") %>%
select(us_max_wait) %>%
rename(wait = us_max_wait)
## Calculate the population median
chicago %>%
summarize(median = median(wait))
## Use simulation to estimate the sampling distribution of the sample median.
## Make a vector with the data we have from which we want to sample
chi_wait = chicago %>%
pull(wait)
## Create the number of times we want to do the simulation
##   and the sample size as objects in R
B = 10000
n = 5
## Create a container to hold the sample median wait times
median_50 = numeric(B)
## Use a for loop to do the simulation
for ( i in 1:B )
{
median_50[i] = median( sample(chi_wait, n, replace=TRUE) )
}
## The standard deviation of this sample is a numerical estimate of the standard error of the sampling distribution
se_50 = sd(median_50)
se_50
## Make a plot
tibble(median_50) %>%
ggplot(aes(x=median_50)) +
geom_density(fill=viridis3[1]) +
ggtitle("Sample median, n=5",
subtitle="Chicago O'Hare hourly maximum waiting time") +
theme_bw()
## Read and format the data
chicago = read_csv2("../../data/chicago-2018.csv") %>%
filter(hour >= "0800 - 0900" & hour <= "1900 - 2000") %>%
select(us_max_wait) %>%
rename(wait = us_max_wait)
## Calculate the population median
chicago %>%
summarize(median = median(wait))
## Use simulation to estimate the sampling distribution of the sample median.
## Make a vector with the data we have from which we want to sample
chi_wait = chicago %>%
pull(wait)
## Create the number of times we want to do the simulation
##   and the sample size as objects in R
B = 10000
n = 10
## Create a container to hold the sample median wait times
median_50 = numeric(B)
## Use a for loop to do the simulation
for ( i in 1:B )
{
median_50[i] = median( sample(chi_wait, n, replace=TRUE) )
}
## The standard deviation of this sample is a numerical estimate of the standard error of the sampling distribution
se_50 = sd(median_50)
se_50
## Make a plot
tibble(median_50) %>%
ggplot(aes(x=median_50)) +
geom_density(fill=viridis3[1]) +
ggtitle("Sample median, n=10",
subtitle="Chicago O'Hare hourly maximum waiting time") +
theme_bw()
## Read and format the data
chicago = read_csv2("../../data/chicago-2018.csv") %>%
filter(hour >= "0800 - 0900" & hour <= "1900 - 2000") %>%
select(us_max_wait) %>%
rename(wait = us_max_wait)
## Calculate the population median
chicago %>%
summarize(median = median(wait))
## Use simulation to estimate the sampling distribution of the sample median.
## Make a vector with the data we have from which we want to sample
chi_wait = chicago %>%
pull(wait)
## Create the number of times we want to do the simulation
##   and the sample size as objects in R
B = 10000
n = 5
## Create a container to hold the sample median wait times
median_50 = numeric(B)
## Use a for loop to do the simulation
for ( i in 1:B )
{
median_50[i] = median( sample(chi_wait, n, replace=TRUE) )
}
## The standard deviation of this sample is a numerical estimate of the standard error of the sampling distribution
se_50 = sd(median_50)
se_50
## Make a plot
tibble(median_50) %>%
ggplot(aes(x=median_50)) +
geom_density(fill=viridis3[1]) +
ggtitle("Sample median, n=10",
subtitle="Chicago O'Hare hourly maximum waiting time") +
theme_bw()
## Read and format the data
chicago = read_csv2("../../data/chicago-2018.csv") %>%
filter(hour >= "0800 - 0900" & hour <= "1900 - 2000") %>%
select(us_max_wait) %>%
rename(wait = us_max_wait)
## Calculate the population median
chicago %>%
summarize(median = median(wait))
## Use simulation to estimate the sampling distribution of the sample median.
## Make a vector with the data we have from which we want to sample
chi_wait = chicago %>%
pull(wait)
## Create the number of times we want to do the simulation
##   and the sample size as objects in R
B = 10000
n = 10
## Create a container to hold the sample median wait times
median_50 = numeric(B)
## Use a for loop to do the simulation
for ( i in 1:B )
{
median_50[i] = median( sample(chi_wait, n, replace=TRUE) )
}
## The standard deviation of this sample is a numerical estimate of the standard error of the sampling distribution
se_50 = sd(median_50)
se_50
## Make a plot
tibble(median_50) %>%
ggplot(aes(x=median_50)) +
geom_density(fill=viridis3[1]) +
ggtitle("Sample median, n=10",
subtitle="Chicago O'Hare hourly maximum waiting time") +
theme_bw()
mean(abs(median_50 - mean(median_50)) < 1.96*se_50)
## Read and format the data
chicago = read_csv2("../../data/chicago-2018.csv") %>%
filter(hour >= "0800 - 0900" & hour <= "1900 - 2000") %>%
select(us_max_wait) %>%
rename(wait = us_max_wait)
## Calculate the population median
chicago %>%
summarize(median = median(wait))
## Use simulation to estimate the sampling distribution of the sample median.
## Make a vector with the data we have from which we want to sample
chi_wait = chicago %>%
pull(wait)
## Create the number of times we want to do the simulation
##   and the sample size as objects in R
B = 10000
n = 50
## Create a container to hold the sample median wait times
median_50 = numeric(B)
## Use a for loop to do the simulation
for ( i in 1:B )
{
median_50[i] = quantile( sample(chi_wait, n, replace=TRUE), 0.9 )
}
## The standard deviation of this sample is a numerical estimate of the standard error of the sampling distribution
se_50 = sd(median_50)
se_50
## Are about 90% of the sample medians within 1.96 SEs of the mean of this distribution?
#mean(abs(median_50 - mean(median_50)) < 1.65*se_50)
## Make a plot
tibble(median_50) %>%
ggplot(aes(x=median_50)) +
geom_density(fill=viridis3[1]) +
ggtitle("Sample median, n=5",
subtitle="Chicago O'Hare hourly maximum waiting time") +
theme_bw()
## Read and format the data
chicago = read_csv2("../../data/chicago-2018.csv") %>%
filter(hour >= "0800 - 0900" & hour <= "1900 - 2000") %>%
select(us_max_wait) %>%
rename(wait = us_max_wait)
## Calculate the population median
chicago %>%
summarize(median = median(wait))
## Use simulation to estimate the sampling distribution of the sample median.
## Make a vector with the data we have from which we want to sample
chi_wait = chicago %>%
pull(wait)
## Create the number of times we want to do the simulation
##   and the sample size as objects in R
B = 10000
n = 50
## Create a container to hold the sample median wait times
median_50 = numeric(B)
## Use a for loop to do the simulation
for ( i in 1:B )
{
median_50[i] = quantile( sample(chi_wait, n, replace=TRUE), 0.9 )
}
## The standard deviation of this sample is a numerical estimate of the standard error of the sampling distribution
se_50 = sd(median_50)
se_50
## Are about 90% of the sample medians within 1.96 SEs of the mean of this distribution?
#mean(abs(median_50 - mean(median_50)) < 1.65*se_50)
## Make a plot
tibble(median_50) %>%
ggplot(aes(x=median_50)) +
geom_density(fill=viridis3[1]) +
ggtitle("Sample median, n=50",
subtitle="Chicago O'Hare hourly maximum waiting time") +
theme_bw()
mean(abs(median_50 - mean(median_50)) < 1.96*se_50)
df1 = rchisq(100000, 1)
df5 = rchisq(100000, 10)
df10 = rchisq(100000, 50)
dat = tibble(mean_df1 = mean(df1),
mean_df5 = mean(df5),
mean_df10 = mean(df10),
v_df1 = var(df1),
v_df5 = var(df5),
v_df10 = var(df10))
dat
B <- 10000
test_statistic = vector(mode = "numeric", B)
p_value = vector(mode = "numeric", B)
for(i in 1:B){
rchisq_q4 = rchisq(n=50, df=5)
se = sd(rchisq_q4)/sqrt(50)
test_statistic[i] = (mean(rchisq_q4) - 5) / se
p_value[i] = pt(-abs(test_statistic[i]), df=49)
}
p_mean_5 <- mean(p_value<=0.05);p_mean_5
p_mean_1 <- mean(p_value<=0.01);p_mean_1
t <- tibble(test = test_statistic, p = p_value)
gt(49) + geom_density(data = t, aes(x = test))
ggplot(t)+
geom_histogram(aes(x = test), color="black", fill="yellow",boundary=0, binwidth=.1)
