knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
source("viridis.R")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
source("viridis.R")
install.packages("viridis")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
source("viridis.R")
## Read in the csv files for all planets
## There is one row for each exoplanet publication
planets <- read_csv("exoplanets-3sept2020.csv")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
source("viridis.R")
## Read in the csv files for all planets
## There is one row for each exoplanet publication
planets <- read_csv("exoplanets-3sept2020.csv")
## Read in the csv files for all planets
## There is one row for each exoplanet publication
planets <- read_csv("exoplanets-3sept2020.csv")
planets_original <- planets # save a copy of the original upload
planets <- read_csv("exoplanets-3sept2020.csv") %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse, default_flag) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(default_flag!=0)
planets %>%
count(method)
planets %>%
filter(method %in% c("Astrometry", "Disk Kinematics", "Eclipse Timing Variations", "Orbital Brightness Modulation", "Pulsar Timing", "Pulsation Timing Variations") )
planets <- read_csv("exoplanets-3sept2020.csv") %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse, default_flag) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(default_flag!=0)
planets %>%
count(method)
planets %>%
filter(method %in% c("Imaging", "Microlensing", "Radial Velocity") )
planets <- read_csv("exoplanets-3sept2020.csv") %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse, default_flag) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(default_flag!=0)
planets %>%
count(method)
planets %>%
filter(method %in% c("Imaging", "Microlensing", "Radial Velocity", "Transit") )
planets <- read_csv("exoplanets-3sept2020.csv") %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse, default_flag) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(default_flag!=0)
planets %>%
count(method)
planets %>%
filter(method != c("Astrometry", "Disk Kinematics", "Eclipse Timing Variations", "Orbital Brightness Modulation", "Pulsar Timing", "Pulsation Timing Variations") )
planets <- read_csv("exoplanets-3sept2020.csv") %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse, default_flag) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(default_flag!=0)
planets %>%
count(method)
planets %>%
filter(method %in% c("Imaging", "Microlensing", "Radial Velocity", "Transit", "Transit Timing Variations") )
View(planets)
?slice_max()
planets %>%
select(star, number)
planets %>%
select(star, number) %>%
slice_max()
planets %>%
select(star, number) %>%
slice_max(order_by = number)
planets %>%
select(star, number) %>%
slice_max(order_by = number, 10)
planets %>%
select(star, number) %>%
slice_max(order_by = number, n = 10)
planets %>%
select(star, number) %>%
distinct() %>%
slice_max(order_by = number, n = 10)
ggplot(planets) +
geom_bar(mapping = aes(x = number, color = method), position = position_dodge2(preserve = "single"))
ggplot(planets) +
geom_bar(mapping = aes(x = number, fill = method), position = position_dodge2(preserve = "single"))
ggplot(planets) +
geom_bar(mapping = aes(x = number, fill = method), position = position_dodge2(preserve = "single")) +
labs(x = "Number of Exoplanets Discovered in the System", y = "Number of Exoplanets")
position_dodge2(preserve = "single")
ggplot(planets) +
geom_bar(mapping = aes(x = number, fill = method), position = "dodge)) +
labs(x = "Number of Exoplanets Discovered in the System", y = "Number of Exoplanets")
ggplot(planets) +
geom_bar(mapping = aes(x = number, fill = method), position = "dodge")) +
ggplot(planets) +
geom_bar(mapping = aes(x = number, fill = method), position = position_dodge2(preserve = "single")) +
labs(x = "Number of Exoplanets Discovered in the System", y = "Number of Exoplanets")
?Transit
planets %>%
filter(method %in% c("Transit", "Radial Velocity"))
planets %>%
filter(method %in% c("Transit", "Radial Velocity") & (is.na(method) | is.na(mass)))
planets %>%
filter(method %in% c("Transit", "Radial Velocity") & (is.na(method) | is.na(mass))) %>%
count(method)
planets %>%
filter(method %in% c("Transit", "Radial Velocity") & (is.na(method) | is.na(mass)))
planets %>%
filter((method %in% c("Transit", "Radial Velocity")) & (is.na(method) | is.na(mass))) %>%
count(method)
planets %>%
filter((method %in% c("Transit", "Radial Velocity")) & (is.na(radius) | is.na(mass))) %>%
count(method)
planets %>%
filter((method %in% c("Transit", "Radial Velocity")) & is.na(radius)) %>%
count(method)
planets %>%
filter((method %in% c("Transit", "Radial Velocity")) & is.na(radius)) %>%
count(method)
planets %>%
filter((method %in% c("Transit", "Radial Velocity")) & is.na(mass)) %>%
count(method)
planets %>%
filter(method == "Transit") %>%
select(radius)
planets %>%
filter(method == "Transit") %>%
select(radius) %>%
drop_na()
planets %>%
filter(method == "Transit") %>%
group_by(radius)
planets %>%
filter(method == "Transit") %>%
group_by(radius) %>%
summarise(
count = n(),
minimum = min(radius, na.rm = TRUE),
quartile = quantile(radius, .25, na.rm = TRUE),
mean = mean(radius, na.rm = TRUE),
median = median(radius, na.rm = TRUE),
maximum = max(radius, na.rm = TRUE))
planets %>%
group_by(method) %>%
summarise(
count = n(),
minimum = min(radius, na.rm = TRUE),
quartile = quantile(radius, .25, na.rm = TRUE),
mean = mean(radius, na.rm = TRUE),
median = median(radius, na.rm = TRUE),
maximum = max(radius, na.rm = TRUE))
planets %>%
group_by(method) %>%
summarise(
count = n(),
minimum = min(radius, na.rm = TRUE),
quartile = quantile(radius, .25, na.rm = TRUE),
mean = mean(radius, na.rm = TRUE),
median = median(radius, na.rm = TRUE),
maximum = max(radius, na.rm = TRUE)) %>%
filter(method = "Transit")
planets %>%
group_by(method) %>%
summarise(
count = n(),
minimum = min(radius, na.rm = TRUE),
quartile = quantile(radius, .25, na.rm = TRUE),
mean = mean(radius, na.rm = TRUE),
median = median(radius, na.rm = TRUE),
maximum = max(radius, na.rm = TRUE))
planets %>%
group_by(method) %>%
summarise(
count = n(),
minimum = min(radius, na.rm = TRUE),
quartile = quantile(radius, .25, na.rm = TRUE),
mean = mean(radius, na.rm = TRUE),
median = median(radius, na.rm = TRUE),
maximum = max(radius, na.rm = TRUE)) %>%
filter(method == "Transit")
planets %>%
filter(is.na(radius)|is.na(mass)) %>%
filter(method %in% c("Transit","Radial Velocity"))%>%
group_by(method)%>%
summarize(rad_count=sum(is.na(radius)),mass_count=sum(is.na(mass)))
planets %>%
filter(is.na(radius)|is.na(mass)) %>%
filter(method %in% c("Transit","Radial Velocity"))%>%
group_by(method)%>%
summarize(radius_count = sum(is.na(radius)), mass_count = sum(is.na(mass)))
planets %>%
filter(is.na(radius) | is.na(mass)) %>%
filter(method %in% c("Transit","Radial Velocity")) %>%
group_by(method) %>%
summarize(radius_count = sum(is.na(radius)), mass_count = sum(is.na(mass)))
planets %>%
group_by(method) %>%
drop_na() %>%
summarise(
count = n(),
minimum = min(radius, na.rm = TRUE),
quartile = quantile(radius, .25, na.rm = TRUE),
mean = mean(radius, na.rm = TRUE),
median = median(radius, na.rm = TRUE),
maximum = max(radius, na.rm = TRUE)) %>%
filter(method == "Transit")
planets %>%
group_by(method) %>%
filter(method == "Transit") %>%
summarise(
count = n(),
minimum = min(radius, na.rm = TRUE),
quartile = quantile(radius, .25, na.rm = TRUE),
mean = mean(radius, na.rm = TRUE),
median = median(radius, na.rm = TRUE),
maximum = max(radius, na.rm = TRUE))
planets %>%
group_by(method) %>%
filter(method == "Transit") %>%
summarise(
count = n(),
minimum = min(radius, na.rm = TRUE),
quartile = quantile(radius, .25, na.rm = TRUE),
mean = mean(radius, na.rm = TRUE),
median = median(radius, na.rm = TRUE),
maximum = max(radius, na.rm = TRUE))
ï¼Ÿslice
?slice
