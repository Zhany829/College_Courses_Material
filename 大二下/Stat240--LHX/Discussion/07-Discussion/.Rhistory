knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
source("../../scripts/viridis.R")
## Here is code to do these steps without a function
##   for n=100, mean=50, sd=10
mu <- 50
sigma <- 10
## What does the next line of code do?  Write a note for yourself that explains it.
x <- rnorm(n=100, mean=mu, sd=sigma)
mean(x) - mu
## To repeat this code many times, it will be helpful to have a function.
## We will not  use this function a lot, so pick a generic name.
## The function has default values
## Replace the XXX with arguments to rnorm()
f_1 <- function(n=1,mean=0,sd=1){
x <- rnorm(XXX)
return ( mean(x) - mean )
}
rnorm(n=100, mean=mu, sd=sigma)
## Here is code to do these steps without a function
##   for n=100, mean=50, sd=10
mu <- 50
sigma <- 10
## What does the next line of code do?  list 100 random samples of normal distribution values with mean 50 and standard deviation 10 and store the result in the variable x
x <- rnorm(n=100, mean=mu, sd=sigma)
mean(x) - mu
## To repeat this code many times, it will be helpful to have a function.
## We will not  use this function a lot, so pick a generic name.
## The function has default values
## Replace the XXX with arguments to rnorm()
f_1 <- function(n=1,mean=0,sd=1){
x <- rnorm(n, mean, sd)
return ( mean(x) - mean )
}
## Here is a for-loop
diff_100 <- numeric(1000)
for ( i in 1:1000 ){
diff_100[i] <- f_1(100,50,5)
}
mean(diff_100)
sd(diff_100)
## ADD CODE TO REPEAT FOR n=10000
## XXX
## Here is a for-loop
diff_100 <- numeric(1000)
for ( i in 1:1000 ){
diff_100[i] <- f_1(100,50,10)
}
mean(diff_100)
sd(diff_100)
## ADD CODE TO REPEAT FOR n=10000
diff_10000 <- numeric(10000)
for ( i in 1:10000 ){
diff_10000[i] <- f_1(100,50,10)
}
mean(diff_10000)
sd(diff_10000)
## Here is a for-loop
diff_100 <- numeric(1000)
for ( i in 1:1000 ){
diff_100[i] <- f_1(100,50,10)
}
mean(diff_100)
sd(diff_100)
## ADD CODE TO REPEAT FOR n=10000
diff_10000 <- numeric(10000)
for ( i in 1:10000 ){
diff_10000[i] <- f_1(100,50,10)
}
mean(diff_10000)
sd(diff_10000)
## Here is a for-loop
diff_100 <- numeric(1000)
for ( i in 1:1000 ){
diff_100[i] <- f_1(100,50,10)
}
mean(diff_100)
sd(diff_100)
## ADD CODE TO REPEAT FOR n=10000
diff_10000 <- numeric(10000)
for ( i in 1:10000 ){
diff_10000[i] <- f_1(100,50,10)
}
mean(diff_10000)
sd(diff_10000)
## Here is a for-loop
diff_100 <- numeric(1000)
for ( i in 1:1000 ){
diff_100[i] <- f_1(100,50,10)
}
mean(diff_100)
sd(diff_100)
## ADD CODE TO REPEAT FOR n=10000
diff_10000 <- numeric(10000)
for ( i in 1:10000 ){
diff_10000[i] <- f_1(100,50,10)
}
mean(diff_10000)
sd(diff_10000)
## Here is a for-loop
diff_100 <- numeric(1000)
for ( i in 1:1000 ){
diff_100[i] <- f_1(100,50,10)
}
mean(diff_100)
sd(diff_100)
## ADD CODE TO REPEAT FOR n=10000
diff_10000 <- numeric(10000)
for ( i in 1:10000 ){
diff_10000[i] <- f_1(100,50,10)
}
mean(diff_10000)
sd(diff_10000)
## Here is a for-loop
diff_100 <- numeric(1000)
for ( i in 1:1000 ){
diff_100[i] <- f_1(100,50,10)
}
mean(diff_100)
sd(diff_100)
## ADD CODE TO REPEAT FOR n=10000
diff_10000 <- numeric(10000)
for ( i in 1:10000 ){
diff_10000[i] <- f_1(100,50,10)
}
mean(diff_10000)
sd(diff_10000)
## Here is a for-loop
diff_100 <- numeric(1000)
for ( i in 1:1000 ){
diff_100[i] <- f_1(100,50,10)
}
mean(diff_100)
sd(diff_100)
## ADD CODE TO REPEAT FOR n=10000
diff_10000 <- numeric(1000)
for ( i in 1:1000 ){
diff_10000[i] <- f_1(10000,50,10)
}
mean(diff_10000)
sd(diff_10000)
## Here is a for-loop
diff_100 <- numeric(1000)
for ( i in 1:1000 ){
diff_100[i] <- f_1(100,50,10)
}
mean(diff_100)
sd(diff_100)
## ADD CODE TO REPEAT FOR n=10000
diff_10000 <- numeric(1000)
for ( i in 1:1000 ){
diff_10000[i] <- f_1(10000,50,10)
}
mean(diff_10000)
sd(diff_10000)
## Here is a for-loop
diff_100 <- numeric(1000)
for ( i in 1:1000 ){
diff_100[i] <- f_1(100,50,10)
}
mean(diff_100)
sd(diff_100)
## ADD CODE TO REPEAT FOR n=10000
diff_10000 <- numeric(1000)
for ( i in 1:1000 ){
diff_10000[i] <- f_1(10000,50,10)
}
mean(diff_10000)
sd(diff_10000)
## Here is a for-loop
diff_100 <- numeric(1000)
for ( i in 1:1000 ){
diff_100[i] <- f_1(100,50,10)
}
mean(diff_100)
sd(diff_100)
## ADD CODE TO REPEAT FOR n=10000
diff_10000 <- numeric(1000)
for ( i in 1:1000 ){
diff_10000[i] <- f_1(10000,50,10)
}
mean(diff_10000)
sd(diff_10000)
pnorm(q=50, mean=50, sd=10)
pnorm(q=60, mean=50, sd=10)
p1 <- pnorm(q=50, mean=50, sd=10)
p2 <- pnorm(q=60, mean=50, sd=10)
p1
p2
p2 - p1
interval_pnorm <- function(a,b,mean,sd){
## complete the code
pa <- pnorm(a, mean, sd)
pb <- pnorm(b, mean, sd)
return(pb - pa)
}
## Test out your function
interval_pnorm(50,60,mean=50,sd=10)
interval_pnorm(-2, 2, 0, 1)
interval_pnorm(60, 140, 100, 20)
interval_pnorm(90, 110, 100, 5)
qnorm(0.5) # Median of a N(0,1) is 0
qnorm(0.84, mean=50, sd=10)
qnorm(0.975, mean=50,sd=10)
a <- qnorm(0.2,50,5)
b <- qnorm(0.8,50,5)
c(a,b)
a <- qnorm(0.2,50,5)
b <- qnorm(0.8,50,5)
c(a,b)
interval_qnorm <- function(p,mean=0,sd=1){
## XXX write this code
a <- qnorm(0.5 - p/2, mean, sd)
b <- qnorm(0.5 + p/2, mean, sd)
return(c(a,b))
}
## Test out your function
interval_qnorm(.6,50, 5)
interval_qnorm(0.95, 0, 1)
interval_qnorm(0.95, 10, 7)
interval_qnorm(0.95, 15, 9)
z-score <- function(x, mean, sd){
return(x-mean) / sd
}
z-score <- function(x, mean, sd){
return((x-mean) / sd)
}
z-score <- function(z, mean, sd){
return((z - mean) / sd)
}
z_score <- function(x, mean, sd){
return((x - mean) / sd)
}
z_score(1.959964, 0, 1)
z_score(23.719748, 10, 7)
z_score(32.639676, 15, 9)
