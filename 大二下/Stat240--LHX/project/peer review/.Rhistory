log10_mass_sd = sd(log10(mass), na.rm = TRUE)
)
ggplot(exo, aes(x = log10(mass), y = log10(radius), color = method)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Mass", y = "Radius") +
theme_bw()
extract_lm <- function(x)
{
out <- as_tibble(coef(summary(x)), rownames = "parameter") %>%
rename(estimate = Estimate,
se = `Std. Error`,
t = `t value`,
p_value = `Pr(>|t|)`)
return ( out )
}
fit1 = lm(log10(radius) ~ log10(mass), exo %>% filter(method == "Radial Velocity"))
fit2 = lm(log10(radius) ~ log10(mass), exo %>% filter(method == "Transit"))
fit3 = lm(log10(radius) ~ log10(mass), exo)
ratial_velocity <- extract_lm(fit1) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Radial Velocity") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit1))
transit <- extract_lm(fit2) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Transit") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit2))
total <- extract_lm(fit3) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Total") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit3))
lm <- bind_rows(ratial_velocity, transit, total)
lm
test <- lm%>%
filter(data != "Total") %>%
select(estimate_slope, se_slope) %>%
summarize(se = sqrt( sum(se_slope ^ 2)),
est = diff(estimate_slope),
t_stat = est / se)
test$t_stat
df <- lm %>%
filter(data != "Total") %>%
summarize(df = sum(df)) %>%
pull(df)
test %>%
mutate(df = df, p_value = 2 * pt(-abs(t_stat), df))
gt(df) +
geom_t_fill(df, b = -abs(test$t_stat)) +
geom_t_fill(df, a = abs(test$t_stat))
exo %>%
add_residuals(fit3) %>%
add_predictions(fit3) %>%
ggplot(aes(x = pred, y = resid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE)
dugong <- read_csv("../../data/dugong.csv")
dugong <- read_csv("../../data/dugong.csv")
View(dugong)
dugong <- read_csv("../../data/dugong.csv")
ggplot(dugong, aes(x = length, y = age)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm") +
geom_smooth(se = FALSE) +
labs(x = "Length", y = "Age") +
ggtitle("Length vs. Age of dugong")
dugong <- read_csv("../../data/dugong.csv")
ggplot(dugong, aes(x = Length, y = Age)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm") +
geom_smooth(se = FALSE) +
labs(x = "Length", y = "Age") +
ggtitle("Length vs. Age of dugong")
dugong <- read_csv("../../data/dugong.csv")
ggplot(dugong, aes(x = Length, y = Age)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm") +
labs(x = "Length", y = "Age") +
ggtitle("Length vs. Age of dugong")
dugong <- read_csv("../../data/dugong.csv")
ggplot(dugong, aes(x = Length, y = Age)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm") +
geom_smooth(se = FALSE) +
labs(x = "Length", y = "Age") +
ggtitle("Length vs. Age of dugong")
dugong <- read_csv("../../data/dugong.csv")
ggplot(dugong, aes(x = Length, y = Age)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm")
labs(x = "Length", y = "Age") +
ggtitle("Length vs. Age of dugong")
dugong <- read_csv("../../data/dugong.csv")
ggplot(dugong, aes(x = Length, y = Age)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm")+
labs(x = "Length", y = "Age") +
ggtitle("Length vs. Age of dugong")
age<- pull(dugong, Age)
length <- pull(dugong,Length)
age_sd <- sd(age)
length_sd <- sd(length)
r <- cor(length, agr)
age<- pull(dugong, Age)
length <- pull(dugong,Length)
age_sd <- sd(age)
length_sd <- sd(length)
r <- cor(length, age)
slope <- r* age_sd / length_sd
slope
age_mean <- mean(age)
length_mean <- mean(length)
intercept <- age_mean - slope * length_mean
intercept
predict <- intercept + slope * 2.5
ggplot(dugong, aes(x = Length, y = Age)) +
geom_point() +
geom_abline(slope = slope, intercept = intercept) +
geom_point(aes(x = 2.5,y = predict), color = "Green")
q5 <-dugong %>%
add_residuals(fit)
fit <-lm(Age ~ Length, data=dugong)
coefficients (fit)
q5 <-dugong %>%
add_residuals(fit)
ggplot(q5,aes(x=Length,y=resid))+
geom_point()+
geom_hline(aes(yintercept=0),linetype="dashed",color="red")+
geom_smooth(se=FALSE)
fit1 = lm(log10(radius) ~ log10(mass), exo %>% filter(method == "Radial Velocity"))
fit2 = lm(log10(radius) ~ log10(mass), exo %>% filter(method == "Transit"))
fit3 = lm(log10(radius) ~ log10(mass), exo)
ratial_velocity <- extract_lm(fit1) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Radial Velocity") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit1))
transit <- extract_lm(fit2) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Transit") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit2))
total <- extract_lm(fit3) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Total") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit3))
lm <- bind_rows(ratial_velocity, transit, total)
lm
df <- lm %>%
filter(data != "Total") %>%
summarize(df = sum(df)) %>%
pull(df)
test %>%
mutate(df = df, p_value = 2 * pt(-abs(t_stat), df))
gt(df) +
geom_t_fill(df, b = -abs(test$t_stat)) +
geom_t_fill(df, a = abs(test$t_stat))
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warnings=FALSE)
library(tidyverse)
library(lubridate)
library(modelr)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
dugong <- read_csv("../../data/dugong.csv")
ggplot(dugong, aes(x = Length, y = Age)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm")+
labs(x = "Length", y = "Age") +
ggtitle("Length vs. Age of dugong")
age<- pull(dugong, Age)
length <- pull(dugong,Length)
age_sd <- sd(age)
length_sd <- sd(length)
r <- cor(length, age)
slope <- r* age_sd / length_sd
slope
age_mean <- mean(age)
length_mean <- mean(length)
intercept <- age_mean - slope * length_mean
intercept
predict <- intercept + slope * 2.5
ggplot(dugong, aes(x = Length, y = Age)) +
geom_point() +
geom_abline(slope = slope, intercept = intercept) +
geom_point(aes(x = 2.5,y = predict), color = "Green")
fit <-lm(Age ~ Length, data=dugong)
coefficients (fit)
q5 <-dugong %>%
add_residuals(fit)
ggplot(q5,aes(x=Length,y=resid))+
geom_point()+
geom_hline(aes(yintercept=0),linetype="dashed",color="red")+
geom_smooth(se=FALSE)
## Read in the csv file
## Select confirmed planets, rename some variables
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag == 1) %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod, year=disc_year,
number=sy_pnum, radius=pl_rade, mass=pl_bmasse)
exo <- planets %>%
filter(method %in% c("Radial Velocity", "Transit")) %>%
filter(!is.na(radius) | !is.na(mass)) %>%
select(-year, -number) %>%
mutate(index = row_number()) %>%
select(index, everything())
nrow(exo)
head(exo)
exo %>%
group_by(method) %>%
summarize(n = n(),
p_radius_na = sum(is.na(radius)) / n,
p_mass_na = sum(is.na(mass)) / n,
log10_radius_mean = mean(log10(radius), na.rm = TRUE),
log10_mass_mean = mean(log10(mass), na.rm = TRUE),
log10_radius_sd = sd(log10(radius), na.rm = TRUE),
log10_mass_sd = sd(log10(mass), na.rm = TRUE)
)
ggplot(exo, aes(x = log10(mass), y = log10(radius), color = method)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Mass", y = "Radius") +
theme_bw()
fit1 = lm(log10(radius) ~ log10(mass), exo %>% filter(method == "Radial Velocity"))
fit2 = lm(log10(radius) ~ log10(mass), exo %>% filter(method == "Transit"))
fit3 = lm(log10(radius) ~ log10(mass), exo)
ratial_velocity <- extract_lm(fit1) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Radial Velocity") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit1))
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warnings=FALSE)
library(tidyverse)
library(lubridate)
library(modelr)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
dugong <- read_csv("../../data/dugong.csv")
ggplot(dugong, aes(x = Length, y = Age)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm")+
labs(x = "Length", y = "Age") +
ggtitle("Length vs. Age of dugong")
age<- pull(dugong, Age)
length <- pull(dugong,Length)
age_sd <- sd(age)
length_sd <- sd(length)
r <- cor(length, age)
slope <- r* age_sd / length_sd
slope
age_mean <- mean(age)
length_mean <- mean(length)
intercept <- age_mean - slope * length_mean
intercept
predict <- intercept + slope * 2.5
ggplot(dugong, aes(x = Length, y = Age)) +
geom_point() +
geom_abline(slope = slope, intercept = intercept) +
geom_point(aes(x = 2.5,y = predict), color = "Green")
fit <-lm(Age ~ Length, data=dugong)
coefficients (fit)
q5 <-dugong %>%
add_residuals(fit)
ggplot(q5,aes(x=Length,y=resid))+
geom_point()+
geom_hline(aes(yintercept=0),linetype="dashed",color="red")+
geom_smooth(se=FALSE)
## Read in the csv file
## Select confirmed planets, rename some variables
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag == 1) %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod, year=disc_year,
number=sy_pnum, radius=pl_rade, mass=pl_bmasse)
exo <- planets %>%
filter(method %in% c("Radial Velocity", "Transit")) %>%
filter(!is.na(radius) | !is.na(mass)) %>%
select(-year, -number) %>%
mutate(index = row_number()) %>%
select(index, everything())
nrow(exo)
head(exo)
exo %>%
group_by(method) %>%
summarize(n = n(),
p_radius_na = sum(is.na(radius)) / n,
p_mass_na = sum(is.na(mass)) / n,
log10_radius_mean = mean(log10(radius), na.rm = TRUE),
log10_mass_mean = mean(log10(mass), na.rm = TRUE),
log10_radius_sd = sd(log10(radius), na.rm = TRUE),
log10_mass_sd = sd(log10(mass), na.rm = TRUE)
)
ggplot(exo, aes(x = log10(mass), y = log10(radius), color = method)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Mass", y = "Radius") +
theme_bw()
extract_lm <- function(x)
{
out <- as_tibble(coef(summary(x)), rownames = "parameter") %>%
rename(estimate = Estimate,
se = `Std. Error`,
t = `t value`,
p_value = `Pr(>|t|)`)
return ( out )
}
fit1 = lm(log10(radius) ~ log10(mass), exo %>% filter(method == "Radial Velocity"))
fit2 = lm(log10(radius) ~ log10(mass), exo %>% filter(method == "Transit"))
fit3 = lm(log10(radius) ~ log10(mass), exo)
ratial_velocity <- extract_lm(fit1) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Radial Velocity") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit1))
transit <- extract_lm(fit2) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Transit") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit2))
total <- extract_lm(fit3) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Total") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit3))
lm <- bind_rows(ratial_velocity, transit, total)
lm
test <- lm%>%
filter(data != "Total") %>%
select(estimate_slope, se_slope) %>%
summarize(se = sqrt( sum(se_slope ^ 2)),
est = diff(estimate_slope),
t_stat = est / se)
test$t_stat
df <- lm %>%
filter(data != "Total") %>%
summarize(df = sum(df)) %>%
pull(df)
test %>%
mutate(df = df, p_value = 2 * pt(-abs(t_stat), df))
gt(df) +
geom_t_fill(df, b = -abs(test$t_stat)) +
geom_t_fill(df, a = abs(test$t_stat))
exo %>%
add_residuals(fit3) %>%
add_predictions(fit3) %>%
ggplot(aes(x = pred, y = resid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE)
ggplot(exo, aes(x = log10(radius), y = log10(mass), color = method)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Mass", y = "Radius") +
theme_bw()
extract_lm <- function(x)
{
out <- as_tibble(coef(summary(x)), rownames = "parameter") %>%
rename(estimate = Estimate,
se = `Std. Error`,
t = `t value`,
p_value = `Pr(>|t|)`)
return ( out )
}
extract_lm <- function(x)
{
out <- as_tibble(coef(summary(x)), rownames = "parameter") %>%
rename(estimate = Estimate,
se = `Std. Error`,
t = `t value`,
p_value = `Pr(>|t|)`)
return ( out )
}
fit1 = lm(log10(radius) ~ log10(mass), exo %>% filter(method == "Radial Velocity"))
fit2 = lm(log10(radius) ~ log10(mass), exo %>% filter(method == "Transit"))
fit3 = lm(log10(radius) ~ log10(mass), exo)
ratial_velocity <- extract_lm(fit1) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Radial Velocity") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit1))
transit <- extract_lm(fit2) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Transit") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit2))
total <- extract_lm(fit3) %>%
select(estimate, se) %>%
mutate(parameter = c("intercept","slope")) %>%
pivot_wider(everything(), names_from = parameter, values_from = c("estimate","se")) %>%
mutate(data = "Total") %>%
select(data, estimate_intercept, se_intercept, estimate_slope, se_slope) %>%
mutate(df = df.residual(fit3))
lm <- bind_rows(ratial_velocity, transit, total)
lm
extract_lm <- function(x)
{
out <- as_tibble(coef(summary(x)), rownames = "parameter") %>%
rename(estimate = Estimate,
se = `Std. Error`,
t = `t value`,
p_value = `Pr(>|t|)`) %>%
mutate(parameter=
case_when(
parameter=="log10(radius)" ~ "slope",
TRUE ~ "intercepts"))%>%
pivot_wider(names_from = parameter,values_from = c(estimate,se))%>%
mutate(df=df.residual(x))%>%
select(-c(p_value,t))%>%
fill(estimate_intercepts,se_intercepts)%>%
fill(estimate_slope,se_slope,.direction = c( "up"))%>%
unique()
return ( out )
}
fit_exo <-lm(log10(mass) ~ log10(radius), data=exo)
fit_exo1 <-lm(log10(mass) ~ log10(radius), data=exo1)
extract_lm <- function(x)
{
out <- as_tibble(coef(summary(x)), rownames = "parameter") %>%
rename(estimate = Estimate,
se = `Std. Error`,
t = `t value`,
p_value = `Pr(>|t|)`) %>%
mutate(parameter=
case_when(
parameter=="log10(radius)" ~ "slope",
TRUE ~ "intercepts"))%>%
pivot_wider(names_from = parameter,values_from = c(estimate,se))%>%
mutate(df=df.residual(x))%>%
select(-c(p_value,t))%>%
fill(estimate_intercepts,se_intercepts)%>%
fill(estimate_slope,se_slope,.direction = c( "up"))%>%
unique()
return ( out )
}
exo1 <- exo %>%
filter(method=="Radial Velocity") %>%
drop_na()
exo2 <- exo %>%
drop_na() %>%
filter(method=="Transit")
fit_exo <-lm(log10(mass) ~ log10(radius), data=exo)
fit_exo1 <-lm(log10(mass) ~ log10(radius), data=exo1)
fit_exo2 <-lm(log10(mass) ~ log10(radius), data=exo2)
data <- rbind(extract_lm(fit_exo1),extract_lm(fit_exo2),extract_lm(fit_exo)) %>%
mutate(data=c("radial_velocity","transit","all"))
data
test <- lm%>%
filter(data != "Total") %>%
select(estimate_slope, se_slope) %>%
summarize(se = sqrt( sum(se_slope ^ 2)),
est = diff(estimate_slope),
t_stat = est / se)
test$t_stat
diff_est <-data$estimate_slope[1]-data$estimate_slope[2]
diff_se <-sqrt(data$se_slope[1]^2+data$se_slope[2]^2)
t_stat<- diff_est/diff_se
t_stat
p<-pt(t_stat,df=data$df[1]+data$df[2],lower.tail=FALSE)*2
p
gt(data$df[1]+data$df[2])+
geom_vline(xintercept = c(-abs(t_stat),t_stat), color = "red", linetype = "dashed") +
geom_t_fill(data$df[1]+data$df[2], a = t_stat,b=8) +
geom_t_fill(data$df[1]+data$df[2], a= -8,b = -abs(t_stat))
q10 <-exo %>%
drop_na()%>%
add_residuals(fit_exo)
ggplot(q10,aes(x=log10(radius),y=resid))+
geom_point()+
geom_hline(aes(yintercept=0),linetype="dashed",color="red")+
geom_smooth(se=FALSE)
q10 <-exo %>%
drop_na()%>%
add_residuals(fit_exo)%>%
ggplot(q10,aes(x=log10(radius),y=resid))+
geom_point()+
geom_hline(aes(yintercept=0),linetype="dashed",color="red")+
geom_smooth(se=FALSE)
q10 <-exo %>%
drop_na()%>%
add_residuals(fit_exo)
ggplot(q10,aes(x=log10(radius),y=resid))+
geom_point()+
geom_hline(aes(yintercept=0),linetype="dashed",color="red")+
geom_smooth(se=FALSE)
