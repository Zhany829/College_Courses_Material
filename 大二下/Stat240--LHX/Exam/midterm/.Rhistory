?slice_max
??slice_max
knitr::opts_chunk$set(echo = TRUE,
message=FALSE,
warning=FALSE,
cache = FALSE)
library(tidyverse)
library(lubridate)
library(stringr)
source("../../scripts/viridis.R")
?slice_max
knitr::opts_chunk$set(echo = TRUE, message=FALSE, fig.height = 3)
library(tidyverse)
library(lubridate)
library(readxl)
## Note: this code assumes viridis.R is two steps up the file directory tree
## Comment it out and use the line below if the file is in the same directory
## Or comment out both lines if you do not have the file
source("../../scripts/viridis.R")
education <- read.csv("../../data/education.csv")
income <- read.csv("../../data/income.csv")
obesity <- read.csv("../../data/obesity-hw.csv")
rural_urban <- read.csv("../../data/rural-urban.csv")
df_obese <- obesity %>%
filter(!age == "05-17") %>%
group_by(zip, sex) %>%
drop_na() %>%
summarise(adult_n = sum(pop), obese_n = sum(obese / bmi * pop), obese_p = obese_n / adult_n) %>%
left_join(education) %>%
mutate(pct_bach = case_when(sex == "female" ~ pct_f_bach, sex == "male" ~ pct_m_bach)) %>%
select(-(pct_f_bach: pct_m_bach))
df_obese %>%
head()
obesity %>%
group_by(zip) %>%
slice_max(pop, n = 1)
str_view(c("+123", "123","++++++++123","+1234"),"[+]+\\d{3}")
str_view(c("+123", "123","++++++++123","+1234"),"\\++\\d{3}")
str_view(c("+123", "123","++++++++123","+1234"),"[+]+\\d{3}")
str_view(c("+123", "123","++++++++123","+1234"),"[+]+\d{3}")
str_view(c("+123", "123","++++++++123","+1234"),"\\+{1,}\\d{3}")
knitr::opts_chunk$set(echo = TRUE,
message=FALSE,
warning=FALSE,
cache = FALSE)
library(tidyverse)
library(lubridate)
library(stringr)
source("../../scripts/viridis.R")
knitr::include_graphics("census-regions.png")
states = read_csv("../../data/states.csv")
states = states %>%
mutate(pct_dem = 100 * poll_2020_D / (poll_2020_D + poll_2020_R))
ggplot(data = states, mapping = aes(x = urban_index, y = pct_dem)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("Urban Index") +
ylab("Relative % Democratic") +
ggtitle("Democratic Support versus Urbanity",
subtitle = "2020 US Presidential Election State Polls")
states %>%
group_by(region) %>%
summarise(avg_pct_dem = mean(pct_dem, na.rm = TRUE), avg_urban_index = mean(urban_index, na.rm = TRUE)) %>%
arrange(avg_urban_index)
state_lean <- states %>%
mutate(lean_d = case_when(str_detect(lean, "R") ~ -1 * as.numeric(str_sub(lean, 3)), str_detect(lean, "D") ~ as.numeric(str_sub(lean, 3)), lean == "EVEN" ~ 0))
state_lean
ggplot(data = state_lean, mapping = aes(x = pct_bach, y = lean_d, color = region)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE) +
xlab("% Adults 25+ with at least Bachelor's") +
ylab("Lean Democratic Party") +
ggtitle("US State Political Lean by Education")
## Read in the appropriate data files
players <- read_csv("../../data/baseball_players.csv")
salaries <- read_csv("../../data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > ymd("1985-01-01") & finalGame < ymd("2015-01-01"))
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(salary > 0 & yearID > 1984 & yearID < 2015) %>%
drop_na()
## Build requested data frame
df_1 <- players_1 %>%
left_join(salaries_1)
head(df_1)
## Read in the appropriate data file
allstar <- read_csv("../../data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
df_1 <- df_1 %>%
left_join(allstar_1) %>%
mutate(allstar_status = case_when(n > 0 ~"allstar", is.na(n) ~"not_allstar")) %>%
select(-n)
head(df_1)
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
## Build requested data frame
df_1 <- df_1 %>%
mutate(period = case_when(
yearID > 1984 & yearID < 1990 ~labels[1],
yearID > 1989 & yearID < 1995 ~labels[2],
yearID > 1994 & yearID < 2000 ~labels[3],
yearID > 1999 & yearID < 2005 ~labels[4],
yearID > 2004 & yearID < 2010 ~labels[5],
yearID > 2009 & yearID < 2015 ~labels[6]
)) %>%
drop_na()
head(df_1)
ggplot(data = df_1, mapping = aes(x = allstar_status, y = salary / 1000, color = allstar_status)) +
geom_boxplot(coef = Inf) +
facet_wrap(~period) +
xlab("All Star status") +
ylab("Salary (thousands)") +
scale_y_continuous(trans='log10') +
ggtitle("Baseball Salaries and All Star Status",
subtitle = "1985 - 2014")
View(salaries_1)
